{"version":3,"file":"static/js/881.4f5c9135.chunk.js","mappings":"qTACA,EAA+B,6BAA/B,EAAwE,0BAAxE,EAA+G,2BAA/G,EAAmJ,uBAAnJ,EAAuL,2BAAvL,EAAgO,4B,SCMnNA,EAAS,WACpB,OAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,SAC1BC,GAAWC,EAAAA,EAAAA,MA8BjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAIA,IAAMK,EAAa,mCAAG,2FACpBT,GAAW,GADS,kBAGQU,EAAAA,EAAAA,iBAAqBN,GAH7B,OAGZO,EAHY,OAIlBb,EAAgBa,GAJE,gDAMlBC,QAAQC,IAAR,MANkB,yBAQlBb,GAAW,GARO,4EAAH,qDAWnBS,OACC,CAACL,KAGF,4BACE,kBAAMU,UAAWC,EAAqBC,SA9BrB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAYF,EAAEG,cACpBjB,EAAgB,CACdkB,MAAOJ,EAAEK,OAAOC,SAASF,MAAMG,MAAMC,cAAcC,SAErDP,EAAUQ,SAwBR,WACE,kBACEb,UAAWC,EACXa,KAAK,OACLC,KAAK,QACLC,WAAS,KAEX,mBAAQhB,UAAWC,EAAmBa,KAAK,SAA3C,UACE,2BACE,SAAC,MAAD,YAIN,gBAAKd,UAAWC,EAAhB,UACE,0BACGlB,GACCA,EAAakC,QAAQC,OAAS,GAC9BnC,EAAakC,QAAQE,KAAI,SAAAC,GAAK,OAC5B,yBACE,SAAC,KAAD,CACEpB,UAAWC,EACXoB,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMhC,GAHjB,SAKG4B,EAAMK,SANFL,EAAME,OAUlBrC,IAAW,SAACyC,EAAA,EAAD,IACX3C,GAA+C,IAA/BA,EAAa4C,gBAC5B,cAAG3B,UAAWC,EAAd,iEAUZ,K,yEClFM2B,EAAM,mCACNC,EAAI,+BAEJC,EAAmB,mCAAG,uGACnBC,GAAAA,CAAM,GAAD,OAAIF,EAAJ,uCAAuCD,IAAOI,MACxD,SAAAC,GAAQ,OAAIA,EAASC,SAFG,2CAAH,qDAMnBC,EAAgB,mCAAG,WAAM5B,GAAN,0FAChBwB,GAAAA,CAAM,GAAD,OACPF,EADO,iCACsBD,EADtB,kBACmCrB,EADnC,+CAEVyB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAHL,2CAAH,sDAMhBE,EAAkB,mCAAG,WAAMC,GAAN,0FAClBN,GAAAA,CAAM,GAAD,OAAIF,EAAJ,kBAAkBQ,EAAlB,oBAAqCT,IAAOI,MACtD,SAAAC,GAAQ,OAAIA,EAASC,SAFE,2CAAH,sDAMlBI,EAAe,mCAAG,WAAMD,GAAN,0FACfN,GAAAA,CAAM,GAAD,OAAIF,EAAJ,kBAAkBQ,EAAlB,4BAA6CT,IAAOI,MAC9D,SAAAC,GAAQ,OAAIA,EAASC,SAFD,2CAAH,sDAMfK,EAAkB,mCAAG,WAAMF,GAAN,0FAClBN,GAAAA,CAAM,GAAD,OAAIF,EAAJ,kBAAkBQ,EAAlB,4BAA6CT,IAAOI,MAC9D,SAAAC,GAAQ,OAAIA,EAASC,SAFE,2CAAH,sDAMlBtC,EAAM,CACVkC,oBAAAA,EACAK,iBAAAA,EACAC,mBAAAA,EACAE,gBAAAA,EACAC,mBAAAA,GAGF","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/movieApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formPosition\":\"Movies_formPosition__GgHU+\",\"formInput\":\"Movies_formInput__zmXM8\",\"buttonFind\":\"Movies_buttonFind__HEt+u\",\"search\":\"Movies_search__VjLZn\",\"searchItem\":\"Movies_searchItem__mdXQx\",\"searchAlert\":\"Movies_searchAlert__cx5o9\"};","import { BsSearch } from 'react-icons/bs';\nimport Loader from 'components/Loader';\nimport api from 'services/movieApi';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport styles from '../Movies/Movies.module.css';\n\nexport const Movies = () => {\n  const [searchMovies, setSearchMovies] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const queryM = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formInput = e.currentTarget;\n    setSearchParams({\n      query: e.target.elements.query.value.toLowerCase().trim(),\n    });\n    formInput.reset();\n  };\n\n  useEffect(() => {\n    if (!queryM) {\n      return;\n    }\n\n    const onSearchMovie = async () => {\n      setLoading(true);\n      try {\n        const searchMovie = await api.fetchMoviesQuery(queryM);\n        setSearchMovies(searchMovie);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onSearchMovie();\n  }, [queryM]);\n\n  return (\n    <div>\n      <form className={styles.formPosition} onSubmit={handleSubmit}>\n        <input\n          className={styles.formInput}\n          type=\"text\"\n          name=\"query\"\n          autoFocus\n        />\n        <button className={styles.buttonFind} type=\"submit\">\n          <span>\n            <BsSearch />\n          </span>\n        </button>\n      </form>\n      <div className={styles.search}>\n        <ul>\n          {searchMovies &&\n            searchMovies.results.length > 0 &&\n            searchMovies.results.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  className={styles.searchItem}\n                  to={`/movies/${movie.id}`}\n                  state={{ from: location }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          {loading && <Loader />}\n          {searchMovies && searchMovies.total_results === 0 && (\n            <p className={styles.searchAlert}>\n              The film you're looking for can't be found\n            </p>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'e8f0bf3ce38076183b976a0014844e32';\nconst BASE = `https://api.themoviedb.org/3`;\n\nconst fetchTrendingMovies = async () => {\n  return axios(`${BASE}/trending/movie/day?api_key=${KEY}`).then(\n    response => response.data\n  );\n};\n\nconst fetchMoviesQuery = async query => {\n  return axios(\n    `${BASE}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  ).then(response => response.data);\n};\n\nconst fetchMoviesDetails = async movieId => {\n  return axios(`${BASE}/movie/${movieId}?api_key=${KEY}`).then(\n    response => response.data\n  );\n};\n\nconst fetchMoviesCast = async movieId => {\n  return axios(`${BASE}/movie/${movieId}/credits?api_key=${KEY}`).then(\n    response => response.data\n  );\n};\n\nconst fetchMoviesReviews = async movieId => {\n  return axios(`${BASE}/movie/${movieId}/reviews?api_key=${KEY}`).then(\n    response => response.data\n  );\n};\n\nconst api = {\n  fetchTrendingMovies,\n  fetchMoviesQuery,\n  fetchMoviesDetails,\n  fetchMoviesCast,\n  fetchMoviesReviews,\n};\n\nexport default api;\n"],"names":["Movies","useState","searchMovies","setSearchMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","queryM","get","location","useLocation","useEffect","onSearchMovie","api","searchMovie","console","log","className","styles","onSubmit","e","preventDefault","formInput","currentTarget","query","target","elements","value","toLowerCase","trim","reset","type","name","autoFocus","results","length","map","movie","to","id","state","from","title","Loader","total_results","KEY","BASE","fetchTrendingMovies","axios","then","response","data","fetchMoviesQuery","fetchMoviesDetails","movieId","fetchMoviesCast","fetchMoviesReviews"],"sourceRoot":""}